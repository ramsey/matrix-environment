services:

  database:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: "synapse"
      POSTGRES_PASSWORD: "${DATABASE_PASS:?must provide a database password}"
      POSTGRES_DB: "synapse"
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - type: bind
        source: ./database/docker-healthcheck
        target: /usr/local/bin/docker-healthcheck
        read_only: true
      - type: bind
        source: "${DATABASE_DATA_PATH:?must provide a path to store database data on the host}"
        target: /var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "docker-healthcheck"]
      interval: 30s
      timeout: 30s
      start_period: 60s
      start_interval: 5s
      retries: 3
    restart: unless-stopped

  synapse:
    image: matrixdotorg/synapse:latest
    environment:
      SYNAPSE_CONFIG_DIR: /data
      SYNAPSE_CONFIG_PATH: /data/homeserver.yaml
      SYNAPSE_WORKER: "synapse.app.homeserver"
    volumes:
      - type: bind
        source: "${SYNAPSE_DATA_PATH:?must provide a path to store Synapse data on the host}/synapse"
        target: /data
      - type: bind
        source: "${IRC_BRIDGE_DATA_PATH}/irc-bridge/appservice-registration-irc.yaml"
        target: /appservice/appservice-registration-irc.yaml
        read_only: true
    depends_on:
      - database
    healthcheck:
      test: ["CMD", "curl", "-fSs", "http://localhost:8008/health"]
      interval: 15s
      timeout: 5s
      start_period: 30s
      start_interval: 5s
      retries: 3
    restart: unless-stopped

  caddy:
    image: caddy:2.7-alpine
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
      - "8448:8448"
      - "8448:8448/udp"
    cap_add:
      - NET_ADMIN
    volumes:
      - type: bind
        source: ./caddy/docker-healthcheck
        target: /usr/local/bin/docker-healthcheck
        read_only: true
      - type: bind
        source: "${CADDY_DATA_PATH:?must provide a path to store Caddy data on the host}/caddy/Caddyfile"
        target: /etc/caddy/Caddyfile
        read_only: true
    depends_on:
      - synapse
    healthcheck:
      test: ["CMD", "docker-healthcheck"]
      interval: 15s
      timeout: 5s
      start_period: 120s
      start_interval: 5s
      retries: 3
    restart: unless-stopped

      #irc-bridge:
      #  image: matrixdotorg/matrix-appservice-irc:latest
      #  expose:
      #    - 113
      #    - 7700
      #    - 8090
      #  ports:
      #    - "113:113"
      #  volumes:
      #    - type: bind
      #      source: "${IRC_BRIDGE_DATA_PATH:?must provide a path to IRC bridge configuration on the host}/irc-bridge/config.yaml"
      #      target: /data/config.yaml
      #      read_only: true
      #    - type: bind
      #      source: "${IRC_BRIDGE_DATA_PATH}/irc-bridge/appservice-registration-irc.yaml"
      #      target: /data/appservice-registration-irc.yaml
      #      read_only: true
      #    - type: bind
      #      source: "${IRC_BRIDGE_DATA_PATH}/irc-bridge/passkey.pem"
      #      target: /data/passkey.pem
      #      read_only: true
      #  depends_on:
      #    - synapse
      #  restart: unless-stopped
